plugins {
    id 'com.github.johnrengelman.shadow'
}
repositories {
    maven { url 'https://maven.quiltmc.org/repository/release/' }
    flatDir {
        dir "../../../BankSystem/mc_${minecraft_version}_BankSystem/forge/build/libs"
        dir "../../../MC_ModUtilities/mc_${minecraft_version}_MC_ModUtilities/forge/build/libs"
    }

    mavenLocal()
    maven { url 'https://jitpack.io' }

}

loom {
    forge {
        mixinConfig "stockmarket.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-forge:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')

    modImplementation("net.kroia:modutilities-forge:$rootProject.modutilities_version")
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}